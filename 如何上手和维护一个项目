快速上手一个项目
------
  搭建环境：
       jdk已安装-  myeclipse破解安装 - 配置基本的字符集，字体，javahome,javac注意一定一致。
       svn已安装 --仓库设置  
                        respo 浏览
                        checkout
                        add - commit 
                        每次提交记得更新当前状态
                        svn代码比对 
                        svn历史
                        如何将远程代码更新到本地 单个文件            
       svn插件安装
       tomcat配置
       dbvisual配置
       项目下载
           svn上项目结构 
       项目导入 svn代码没有问题，本地环境问题 
          到处哪个工程(当前开发到哪个阶段)
          1.检出和导出区别？
            第一次才会使检出，以后每次比对 ， 更新 
          2.灰色信号:本地修改未提交          
            更新/与资源库同步/提交 ：https://blog.csdn.net/u014771464/article/details/52769000
            常用操作:https://www.cnblogs.com/keyi/p/5949370.html
            分支/合并：
          3.编译慢 validaiton太慢 
          4.报错可能原因：
               1.编译器和jdk版本不同   
               2.project-clean 
               3.报错如何解决？    所有jar包来自webinfo/lib下 删除引入  重新引入build path   jdk也可以

       等测试环境 - 点击
  
  
  
  
  
 ------ 
  步骤不是固定的，也不是只执行一遍。第一遍按步骤浏览  ， 第二遍流程泡桐 ，第三遍重点，疑点解答。
   文档 -> 前台按钮 -> 表结构->类结构（元素 pojo/dao....）->流程控制web.xml->mvc->spring ioc->log|切面等->代码
      -1.项目配套的开发文档概要阅读
      0.前台按钮相当于系统的入口，场景体现。 文件夹分类
      1.表结构，有时候我们只顾着看每一个方法是怎么进行的，却没有去了解数据库之间的 ‘ 主外键关联 ’。
             1.如何快速捋出表之间关系，特别是外键问题。
      2.web.xml，知道项目中用到了什么拦截器，监听器，过滤器，拥有哪些配置文件。
                 如果是拦截器，一般负责过滤请求，进行AOP等；如果是监听器，可能是定时任务初始化任务；            
                 有的人就是因为缺少了这一步，自己写了一个action，配置文件也没有写错，但是却怎么调试也无法进入这个action， 直到别人告诉他，请求被拦截了                

      3.web.xml中加载的配置文件及子加载文件，首先一定是mvc相关的，如springmvc中，要请求哪些请求是静态资源，使用了哪些view策略，controller注解放在哪
               个包下等。 然后是db相关配置文件，看使用了什么数据库，使用了什么orm框架，是否开启了二级缓存，使用哪种产品作为二级缓存，事务管理的处理，
               需要 扫描的实体类放在什么位置。最后是spring核心的ioc功能相关的配置文件，知道接口与具体类的注入大致是怎样的。当然还有一些如apectj
               等的配 置文件
      4.log策略，日志的各个级别是如何处理的，在哪些地方使用了log记录日志


维护一个项目

      1.架构文档
         开发项目是需要学会写架构文档，而不是只是做一个码农
              包含以下内容：
                    模块分级，各模块关系，各模块负责人
                    各模块时序图
                    各模块表结构
                    协议文档(接口文档)
                    每个负责人工作计划
                    下发任务后每个模块的负责人用开发工具画出自己的时序图，表结构和接口文档，最后汇总到总项目负责人处。
                    
                    
                    
    未完成：
        整体模块图
        控制图(aop listener filter log ..和业务模块有关，但不是业务)
        模块流程图(管道为业务主线(aciton|service|dao 各个注意点有哪些？) aop/base/extend/interface)
