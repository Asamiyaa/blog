面试题：
	1.数据结构( 项目中如何组织业务数据结构 ) -- hashmap（红黑树）/ concurrent-- 
		HashMap为什么是不安全的？
				  1.在多线程情况下，同时put结点的时候有可能造成数据丢失
					2.多线程put情况下可能造成 环形链；然后再调用get方法的时候就会出现死循环，造成cpu 100%；
	
	2.安全性 --> 问题定位、解决能力 
			什么时候回发生内存泄露？让你写一段内存泄露的代码你会怎么写？
				JAVA 内存泄露详解（原因、例子及解决） https://blog.csdn.net/anxpp/article/details/51325838
				Java中关于内存泄漏出现的原因以及如何避免内存泄漏  https://blog.csdn.net/wtt945482445/article/details/52483944?utm_source=blogxgwz8
				Vector v = new Vector(10);
						for (int i = 0; i < 100; i++) {
						    Object o = new Object();
						    v.add(o);
						    o = null;
						}
				在这个例子中，我们循环申请Object对象，并将所申请的对象放入一个 Vector 中，如果我们仅仅释放引用本身，那么 Vector 仍然引用该对象，所以这个对象对 GC 来说是不可回收的。因此，如果对象加入到Vector 后，还必须从 Vector 中删除，最简单的方法就是将 Vector 对象设置为 null。
				v = null
				
								平时有没有遇到一些栈溢出或者内存溢出，内存泄露的问题吗？如果去分析这个问题？
				java内存溢出与内存泄露 :https://blog.csdn.net/hu1991die/article/details/43052281
				>内存泄漏是指对象实例在新建和使用完毕后，仍然被引用，没能被垃圾回收释放，一直积累，直到没有剩余内存可用。如果内存泄露，我们要找出泄露的对象是怎么被GC ROOT引用起来，然后通过引用链来具体分析泄露的原因。分析内存泄漏的工具有：Jprofiler，visualvm等。
				内存溢出是指当我们新建一个实力对象时，实例对象所需占用的内存空间大于堆的可用空间。
				栈（JVM Stack）存放主要是栈帧( 局部变量表, 操作数栈 , 动态链接 , 方法出口信息 )的地方。注意区分栈和栈帧：栈里包含栈帧。与线程栈相关的内存异常有两个：
				a）、StackOverflowError(方法调用层次太深，内存不够新建栈帧)
				b）、OutOfMemoryError（线程太多，内存不够新建线程）
				如果出现了内存溢出问题，这往往是程序本生需要的内存大于了我们给虚拟机配置的内存，这种情况下，我们可以采用调大-Xmx来解决这种问题
				
				java内存泄漏的定位与分析 :https://blog.csdn.net/gzh0222/article/details/8538727
				jstat -gc查看一下GC过程
				拿到dump文件利用MemoryAnalyzer来分析泄露的地方在哪里
				
				如果内存猛增，怎么去排查？ http://www.ccblog.cn/84.htm
				通过jstack分析问题
				1、利用top名称查看哪个java进程占用了较多的cpu资源；
				2、通过top -Hp pid可以查看该进程下各个线程的cpu使用情况；
				3.通过top -Hp命令定位到cpu占用率较高的线程tid之后，继续使用jstack pid命令查看当前java进程的堆栈状态
				4.然后将刚刚找到的tid转换成16进制，在 jstack -pid里面的堆栈信息里面找到对应的线程信息

	 3.数据库
				Innode 存储引擎的索引结构了解一下？
				为何索引用B+树 ，而不用红黑树等其他的树？
				以B+树结构层面分析一下为什么表数据量大了之后访问速度会变慢？
				Innode和 MYISAM存储引擎区别
				Innodb中有哪些索引？分别介绍一下
				如何优化大数据量分页limit？
				简要说下数据库优化
				在工作中有遇见什么死锁的情况吗？你是怎么分析的？
				怎么评估什么时候需要分库分表？如果每周曾加100万数据，要在什么情况下去考虑分库分表？
				Innodb 支持哪些类型的锁？
				 Mysql 大表数据如何定期归档
				大表数据定期归档
				①.新建存储过程，查询30天的数据并归档进新数据库，然后把30天前的旧数据从旧表里删除
				②.创建EVENT，每天晚上凌晨00：00定时执行上面的存储过程
	
	4.问题
	     大数据量缓存初始化 / 表
	     一致性 、幂等
       工作中有碰到过线上的问题吗？怎么解决的？
       请讲一个你工作中让你影响深刻并且最难寻找和解决的bug？
       如果网站访问过慢，并且每隔一段时间就会特别卡，你会去怎么排查问题？
       你有过Jvm调优经验吗？
       你做了这么多系统，是怎么做系统监控的，系统的稳定性？内存满了，磁盘满了，和cpu高了之类的？
       有碰到过数据库死锁的问题吗？怎么解决的？

	
	5.Spring 中IOC 和工厂模式的区别，为啥不用工厂模式？
      工厂模式的升级 IOC 依赖注入 控制反转
      （1）也许有人说，IoC和工厂模式不是一样的作用吗，用IoC好象还麻烦一点。 举个例子，如果用户需求发生变化，要把Chinese类修改一下。那么前一种工厂模式，就要更改Factory类的方法，并且重新编译布署。而IoC只需 要将class属性改变一下，并且由于IoC利用了Java反射机制，这些对象是动态生成的，这时我们就可以热插拨Chinese对象（不必把原程序停止 下来重新编译布署，java特性 需要重新编译）
      （2）也许有人说，即然IoC这么好，那么我把系统所有对象都用IoC方式来生成。 注意，IoC的灵活性是有代价的：设置步骤麻烦、生成对象的方式不直观、反射比正常生成对象在效率上慢一点。因此使用IoC要看有没有必要，我认为比较通用的判断方式是：用到工厂模式的地方都可以考虑用IoC模式。
      
      
      
      
	
