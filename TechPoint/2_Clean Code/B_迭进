假设遵循一些规矩你就能洞见代码的结构和设计，更轻易的应用SRP和DIP之类原则，又会如何？
  Kent Beck四原则，使设计“ 简单 ”
    1.运行所有测试
    2.不可重复           
          int size() ; boolean isEmpty()
          => boolean isEmpty(){
            return 0==size()
          }
    3.表达程序员意图
    4.尽可能减少类和方法的数量
    以上规则按其重要程度排序。
    
  总结：没有一种或几种方案可以放之四海接踵的。设计灵活的系统必须灵活使用技术并结合用户故事，做到精益求精。
        这种能力只有在不断的实践中才会成长，且都是建立在思考上的。
 
