
 1.类 / 成员变量 / 局部变量的作用域最小化，可以增强代码的可读性和可维护性，并降低出错的可能性。 -->准确的
 
 2.鉴于习惯，Java象C一样将“ 变量声明在开头 ”，这种做法会造成混乱，分散读者的注意力。 <---所以当阅读方法时，可以忽略变量的声明，
   因为那不是他们的“ 作用位置 ” 也不是“ 代码开发者开始就知道会使用这些 而是在用到的地方 ”
   因此说也方法时，直接“ 操作方法逻辑校验... ” ,用到哪些变量再说
 
 3.局部变量的作用域在它被声明的点开始扩展，一直到外围块block结束。如果变量在它的目标使用区域之前或者之后意外地使用的话，可能时灾难的

 4.块block:逻辑控制语句 - try.catch - 静态块 ...如果这些block中变量使用到再声明，如果要是在后面使用到，如finally{} stream关闭则
   必须要“ 提前声明 ”
   for(int i = 0 ,n=expensive() ;i<n ;i++){ .. }
   这种做法i n 具有相同的作用域。第二个n被用来保存第一个变量的极限值，从而避免在每次迭代中执行冗余计算的开销。-->为什么这里不进行计算？i++进行？
   如果保证每次迭代都会返回相同的结果，就应该使用这种做法。
 
