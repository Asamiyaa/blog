更高层的实现应该捕获低层的异常，童谣抛出可以按照高层抽象进行解释的异常。这种做法就是异常转译。
  try{
  }catch(LowerLevelException e){
    throw new HigherLevelException(){}
  }
  
 分类：
      1.异常抛出
      2.异常捕获
      3.异常捕获后再抛出 实则为了转译
 
 异常链：如果低层的异常对于调试导致高层异常的问题有帮助，使用异常链是合适的。低层的异常被禅道高层，高层的异常提供访问方法
        Throwable.getCause获得低层异常  --->自定义异常中override构造方法
 
 优化：
     1.低层方法调用时，进行参数校验避免产生异常
     2.在catch中使用logger对应打印stack信息来便于问题定位，再throw高层异常给客户端，来实现客户段代码和最终用户隔离开。
     
     
     
     
