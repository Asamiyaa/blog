
**********  当你不确定使用哪个对对象时，但无论是哪个对象都需要执行“ 相同操作 ”，那么就考虑反射。在运行时确定，再去通过“ 定义好的操作执行 ”
            当你不确定使用哪个类时，但无论哪个类都需要执行“ 相同操作 ” ，那么久考虑泛型 
            
            class类就像collection这些一样是“ 容器 ”类。所以会Class<T> 表示某个类的Class形式 如果Class那么就像List一样没有约束具体
            
            反射 (Reflection) 是 Java 的特征之一，它允许运行中的 Java 程序“ 在运行时 ”获取 “ 自身的信息 ”，并且可以“ 操作类或对象的内部属性 ”。
                             程序中一般的对象的类型都是在编译期就确定下来的，而 Java 反射机制可以动态地创建对象并调用其属性，这样的对象的类型在编译期是未知的。
                             (这就需要“ 我们在编写反射性代码时，抽象出公共的部分
                                                               1.对象实例化时该如何构造 newInstance 还是Constructor ”
                                                          --是否需要遍历还是直接获取属性和方法-指定
                                                               2.这个方法是否和field某种get..有关，给属性塞值
                                                               3.需要invoke哪个方法 这个方法和属性是否有关，name上有啥特征比如getXxx /....
            
