
1. Element namespace schema xsd --> 完全自定义xml结构 根据业务需要  机具es服务

2. 解析方式  dom sax ... xstream  --微信上对xml解析的关注，有的关注xml结构，有的关注内容映射-直接映射为对象
   这种方式必须是‘ 公用的，不单独针对某个xml ’
   
   dom4j和sax解析实现： https://github.com/corPrgrm/VeteransLoveWars/blob/master/20190710_xml%E8%A7%A3%E6%9E%90%E6%80%9D%E8%80%83%E5%BE%AA%E7%8E%AF%E9%80%92%E5%BD%92%E5%8F%8D%E5%B0%84%E6%B3%9B%E5%9E%8B%E5%8F%8A%E6%A1%86%E6%9E%B6%E5%BF%AB%E9%80%9F%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8
                       hook下utils/XMLconvertUtils
              sax解析：https://blog.csdn.net/lp284558195/article/details/79136322
   
   schema,namespace校验：https://www.jianshu.com/p/39710eb79f26  还是基于Doucument api 。获取schema，校验当前文档，在这个基础上添加了开关...
   
   xstream..多种映射实现：
         DOM 、SAX、StAX技术都是从XML的角度来处理文档和建立模型，这对于只关注文档XML结构应用程序来说是适用的，
         但是很多应用程序仅仅将XML作为数据交换的媒介，更多的关注的是文档数据本身，为此人们又提出了一种XML数据绑定技术，可以忽略XML文档的实际结构，
         而直接使用文档的数据内容,比如Castor、JAXB、JiBX、Qucik和Zeus等。 xtream , xpath ...
         
         XML 和 Java 技术: 数据绑定的多种用法:https://blog.csdn.net/fightplane/article/details/1586610
         打造完美的xml技术解决方案（dom4j/xstream）:https://blog.csdn.net/thunder09/article/details/5555946  
            xml/string/bean转换 xmljson转换  dom4j/xstream实现
            

                       
3.为什么真正系统中看起来复杂，不易理解？
   像机具中的es一样，与jbpm,设计模式，异常，线程等柔和在一起使用
   像bbsp中schema校验，加解密，mq,对象映射，模板方法柔和在一起使用
      schema校验：https://www.jianshu.com/p/39710eb79f26
                  https://blog.51cto.com/lavasoft/97597
                  https://blog.csdn.net/u012843873/article/details/85756563
                  
 4.0.oxm 常用技术  
1.xml element  （查看hook/util/xmlutil)
		1.更好的解决了层级问题 vs proerpty中dbname.info.name.alias= ...平面结构及键唯一
		2.序列化 对象传递 webservice .. vs serialiable
		
		1.结构
		   <? xml version="" encoding=""?>  头文件  可选  处理指令
		   
		   <!DOCTYPE configuration ...."http://java.sun.com/.../..2.2.dtd"  文档类型定义dtd 可选
		   
		   <xx>
		   			<xx> ...                    xml正文
		   <student name="name">	   				<student> 元素 / name 属性  /xiaoming 文本 / 子元素 孙元素(层级) 
		   				xiaoming
		   				<school>xiaohebei<school> 设计时应避免文本和子元素混合，简化解析过程
		   </student>  
		
		2.元素 vs 属性
		  属性:修改值的解释  比如 单位(可以不使用)
		  元素：最小的粒度，不可分割。
		  
		3.特殊的字符 < > & ... 处理
		   1.转义   &lt; &gt;...
		   2.<![CDATA[ xx ]]> xx为可以包含特殊字符  <> is my best
		   
2.解析和拼接( ***公用*** api？jdk本身Doucument SAXparse  org.. javax...等 )  util  
		完全清晰结构才能编写出for if等情况 以及多层for ...  --xml结构|map|list...嵌套问题 树..
		
		抽到递归

    （ dom / sax ）4种 xpath  
     如何验证schema 
     构建obj-xml
     获取值方式 + webservice解析方式(https://blog.csdn.net/chenleixing/article/details/44958549)
	
	抽象到方法之上 - 类(反射 泛型 设计模式)	
		反射  
		 	api 
		 			1.基本的 Java 类型（boolean、byte、char、short、int、long、float 和 double）和关键字 void 也表示为 Class 对象--基本类型参数转化。/非基本类型呢？
		 			2.Class 没有公共构造方法 -- 构造路径
		 			3.
		 	坑 
		  https://blog.csdn.net/briblue/article/details/76223206#%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0-method
		  https://blog.csdn.net/hbcui1984/article/details/2719089
		  
		  使用场景
		  		对象映射 结合泛型  子类对泛型影响  子类和父类 ..
		  		注解获取

		dom - dom4j解析 总结 递归(自己认识有问题)....
		sax解析  qname 
	
	相关的框架使用 映射到对象 对比自己的实现                 
                  
