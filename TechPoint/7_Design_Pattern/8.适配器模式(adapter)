--后期设计模式--  
1.当前存在一个接口 - 类 -实例
2.新需求，需要实现另一个功能，但同时需要该上一个功能
				1.在原来接口上添加 ‘ 该新功能 ’，--所有的实现都需实现新增方法 / 提供abstract 默认实现 -需要重新继承该abstract 而不是原来接口
				2.使用adapter 对原来的影响没有 其实也就是通过 类-实现 / 实例-依赖.... 实现复用
				
				
抽像：充电器

uml图  https://blog.csdn.net/zcw4237256/article/details/79657514
   1.类
   
   
   2.实例
   

代码实现：

方法的重载同样是 适配器 展现

继承自类并实现另一个接口，来实现适配( vs 桥接模式)。

bbsp中dao继承baseDao和实现daoInterface和这里是有区别的。因为这里的baseDao只是将“ 基础的操作 curd ”抽出来了，并没有说“ 目的性的实现功能并且和
  此时接口需求冲突  ”


适配器模式：https://www.cnblogs.com/java-my-life/archive/2012/04/13/2442795.html
           类比于‘ 方法重载 ’
